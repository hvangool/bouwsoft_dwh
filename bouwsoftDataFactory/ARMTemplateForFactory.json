{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "bouwsoftDataFactory"
		},
		"AzureSqlDatabase_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase'"
		},
		"RestServiceBouwsoft_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://Heket.bouwsoft.be/api/v1/"
		},
		"RestServiceBouwsoftAccessToken_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://charon.bouwsoft.be/api/v1/Authorize/AccessToken"
		},
		"RestServiceOutsmart_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://office.out-smart.com/openapi/8/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/BouwsoftPipelineActualCostItems')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Truncate ActualCostItems",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Truncate_ActualCostItems]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup Parameters",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate ActualCostItems",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlParameters",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Copy ActualCostItems",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup Parameters",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Content-Length": "0",
									"Clientnr": "6080",
									"AccessToken": {
										"value": "@activity('Lookup Parameters').output.firstRow.AccessToken",
										"type": "Expression"
									}
								},
								"paginationRules": {
									"AbsoluteUrl.{offset}": "RANGE:0:100000:500"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['project_id']"
										},
										"sink": {
											"name": "project_id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['actualcost_id']"
										},
										"sink": {
											"name": "actualcost_id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['description']"
										},
										"sink": {
											"name": "description",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['Records']",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "RestResourceBouwsoftActualCostItems",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlActualCostItems",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-04-14T08:41:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlParameters')]",
				"[concat(variables('factoryId'), '/datasets/RestResourceBouwsoftActualCostItems')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlActualCostItems')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BouwsoftPipelineAddresses')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Addresses",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup Parameters",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Content-Length": "0",
									"Clientnr": "6080",
									"AccessToken": {
										"value": "@activity('Lookup Parameters').output.firstRow.AccessToken",
										"type": "Expression"
									}
								},
								"paginationRules": {
									"AbsoluteUrl.{offset}": "RANGE:0:2000:500"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['clientnr']"
										},
										"sink": {
											"name": "clientnr",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['suppliernr']"
										},
										"sink": {
											"name": "suppliernr",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['address']"
										},
										"sink": {
											"name": "address",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['countrycode']"
										},
										"sink": {
											"name": "countrycode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['zipcode']"
										},
										"sink": {
											"name": "zipcode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['city']"
										},
										"sink": {
											"name": "city",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['Records']",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "RestResourceBouwsoftAddresses",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlAddresses",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Truncate Addresses",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Truncate_Addresses]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup Parameters",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate Addresses",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlParameters",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-04-13T12:07:55Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestResourceBouwsoftAddresses')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlAddresses')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlParameters')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BouwsoftPipelineCompanyDetails')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy CompanyDetails",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup Parameters",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Content-Length": "0",
									"Clientnr": "6080",
									"AccessToken": {
										"value": "@activity('Lookup Parameters').output.firstRow.AccessToken",
										"type": "Expression"
									}
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "name",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['Records']",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "RestResourceBouwsoftCompanyDetails",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlCompanyDetails",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Truncate CompanyDetails",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Truncate_CompanyDetails]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup Parameters",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate CompanyDetails",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlParameters",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-04-13T12:07:55Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestResourceBouwsoftCompanyDetails')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlCompanyDetails')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlParameters')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BouwsoftPipelineEmployees')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Employees",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup Parameters",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['number']"
										},
										"sink": {
											"name": "id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['lastname']"
										},
										"sink": {
											"name": "lastname",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['firstname']"
										},
										"sink": {
											"name": "firstname",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['response']",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "RestResourceOutsmartEmployees",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlEmployees",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Truncate Employees",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Truncate_Employees]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup Parameters",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate Employees",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlParameters",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-04-13T12:07:55Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestResourceOutsmartEmployees')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlEmployees')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlParameters')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BouwsoftPipelineParameters')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup Parameters",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlParameters",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If AcessToken expired",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Lookup Parameters",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@less(activity('Lookup Parameters').output.firstRow.ValidUntil,utcnow())",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy Parameters",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Truncate Parameters",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"additionalHeaders": {
												"Clientnr": "6080",
												"RefreshToken": "UlPSDrSjPlAWSxllVSAqzOjVSSIlSVjtStPRAbmbVItfjxIGfR"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['AccessToken']"
													},
													"sink": {
														"name": "AccessToken",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['ServerName']"
													},
													"sink": {
														"name": "ServerName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['ValidUntil']"
													},
													"sink": {
														"name": "ValidUntil",
														"type": "String"
													}
												}
											],
											"collectionReference": "",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "RestResourceAccessToken",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureSqlParameters",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Truncate Parameters",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Truncate_Parameters]"
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-04-13T14:31:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlParameters')]",
				"[concat(variables('factoryId'), '/datasets/RestResourceAccessToken')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BouwsoftPipelineParameters_aid')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Parameters",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Parameters",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Clientnr": "6080",
									"RefreshToken": "UlPSDrSjPlAWSxllVSAqzOjVSSIlSVjtStPRAbmbVItfjxIGfR"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['AccessToken']"
										},
										"sink": {
											"name": "AccessToken",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ServerName']"
										},
										"sink": {
											"name": "ServerName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ValidUntil']"
										},
										"sink": {
											"name": "ValidUntil",
											"type": "String"
										}
									}
								],
								"collectionReference": "",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "RestResourceAccessToken",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlParameters",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Truncate Parameters",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Truncate_Parameters]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-04-14T09:04:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestResourceAccessToken')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlParameters')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BouwsoftPipelineProjects')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Projects",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup Parameters",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Content-Length": "0",
									"Clientnr": "6080",
									"AccessToken": {
										"value": "@activity('Lookup Parameters').output.firstRow.AccessToken",
										"type": "Expression"
									}
								},
								"paginationRules": {
									"AbsoluteUrl.{offset}": "RANGE:0:1000:500"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['pnr']"
										},
										"sink": {
											"name": "pnr",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['company_id']"
										},
										"sink": {
											"name": "company_id",
											"type": "Int64"
										}
									}
								],
								"collectionReference": "$['Records']",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "RestResourceBouwsoftProjects",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlProjects",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Truncate Projects",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Truncate_Projects]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup Parameters",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate Projects",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlParameters",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-04-13T15:00:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestResourceBouwsoftProjects')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlProjects')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlParameters')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BouwsoftPipelinePurchaseInvoiceProjects')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Truncate PurchaseInvoiceProjects",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Truncate_PurchaseInvoiceProjects]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup Parameters",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate PurchaseInvoiceProjects",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlParameters",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Copy PurchaseInvoiceProjects",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup Parameters",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Content-Length": "0",
									"Clientnr": "6080",
									"AccessToken": {
										"value": "@activity('Lookup Parameters').output.firstRow.AccessToken",
										"type": "Expression"
									}
								},
								"paginationRules": {
									"AbsoluteUrl.{offset}": "RANGE:0:100000:500"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['purchaseinvoice_id']"
										},
										"sink": {
											"name": "purchaseinvoice_id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['purchaseinvoice_nr']"
										},
										"sink": {
											"name": "purchaseinvoice_nr",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['address_supplier_id']"
										},
										"sink": {
											"name": "address_supplier_id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['project_id']"
										},
										"sink": {
											"name": "project_id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['actualcostitem_id']"
										},
										"sink": {
											"name": "actualcostitem_id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['amount']"
										},
										"sink": {
											"name": "amount",
											"type": "Decimal"
										}
									}
								],
								"collectionReference": "$['Records']",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "RestResourceBouwsoftPurchaseInvoiceProjects",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlPurchaseInvoiceProjects",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-04-14T08:41:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlParameters')]",
				"[concat(variables('factoryId'), '/datasets/RestResourceBouwsoftPurchaseInvoiceProjects')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlPurchaseInvoiceProjects')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BouwsoftPipelinePurchaseInvoices')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy PurchaseInvoices",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup Parameters",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Content-Length": "0",
									"Clientnr": "6080",
									"AccessToken": {
										"value": "@activity('Lookup Parameters').output.firstRow.AccessToken",
										"type": "Expression"
									}
								},
								"paginationRules": {
									"AbsoluteUrl.{offset}": "RANGE:0:100000:500"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['company_id']"
										},
										"sink": {
											"name": "company_id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['date']"
										},
										"sink": {
											"name": "date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['nr_supplier']"
										},
										"sink": {
											"name": "nr_supplier",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['address_id']"
										},
										"sink": {
											"name": "address_id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['basis1']"
										},
										"sink": {
											"name": "basis1",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "[['basis2']"
										},
										"sink": {
											"name": "basis2",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "[['basis3']"
										},
										"sink": {
											"name": "basis3",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "[['basis4']"
										},
										"sink": {
											"name": "basis4",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "[['basis5']"
										},
										"sink": {
											"name": "basis5",
											"type": "Decimal"
										}
									}
								],
								"collectionReference": "$['Records']",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "RestResourceBouwsoftPurchaseInvoices",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlPurchaseInvoices",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Truncate PurchaseInvoices",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Truncate_PurchaseInvoices]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup Parameters",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate PurchaseInvoices",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlParameters",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-04-14T08:41:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestResourceBouwsoftPurchaseInvoices')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlPurchaseInvoices')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlParameters')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BouwsoftPipelinePurchaseOrders')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy PurchaseOrders",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup Parameters",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Content-Length": "0",
									"Clientnr": "6080",
									"AccessToken": {
										"value": "@activity('Lookup Parameters').output.firstRow.AccessToken",
										"type": "Expression"
									}
								},
								"paginationRules": {
									"AbsoluteUrl.{offset}": "RANGE:0:100000:500"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['nr']"
										},
										"sink": {
											"name": "nr",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['company_id']"
										},
										"sink": {
											"name": "company_id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['project_id']"
										},
										"sink": {
											"name": "project_id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['address_id']"
										},
										"sink": {
											"name": "address_id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['ledger']"
										},
										"sink": {
											"name": "ledger",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['billed']"
										},
										"sink": {
											"name": "billed",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['approved']"
										},
										"sink": {
											"name": "approved",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['delivered']"
										},
										"sink": {
											"name": "delivered",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['date']"
										},
										"sink": {
											"name": "date"
										}
									},
									{
										"source": {
											"path": "[['basis1']"
										},
										"sink": {
											"name": "basis1",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "[['basis2']"
										},
										"sink": {
											"name": "basis2",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "[['basis3']"
										},
										"sink": {
											"name": "basis3",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "[['basis4']"
										},
										"sink": {
											"name": "basis4",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "[['basis5']"
										},
										"sink": {
											"name": "basis5",
											"type": "Decimal"
										}
									}
								],
								"collectionReference": "$['Records']",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "RestResourceBouwsoftPurchaseOrders",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlPurchaseOrders",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Truncate PurchaseOrders",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Truncate_PurchaseOrders]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup Parameters",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate PurchaseOrders",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlParameters",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-04-14T08:41:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestResourceBouwsoftPurchaseOrders')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlPurchaseOrders')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlParameters')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BouwsoftPipelineSalesInvoices')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Truncate SalesInvoices",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Truncate_SalesInvoices]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup Parameters",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate SalesInvoices",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlParameters",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Copy SalesInvoices",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup Parameters",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Content-Length": "0",
									"Clientnr": "6080",
									"AccessToken": {
										"value": "@activity('Lookup Parameters').output.firstRow.AccessToken",
										"type": "Expression"
									}
								},
								"paginationRules": {
									"AbsoluteUrl.{offset}": "RANGE:0:100000:500"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['company_id']"
										},
										"sink": {
											"name": "company_id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['type_id']"
										},
										"sink": {
											"name": "type_id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['nr']"
										},
										"sink": {
											"name": "nr",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['date']"
										},
										"sink": {
											"name": "date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['address_id']"
										},
										"sink": {
											"name": "address_id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['project_id']"
										},
										"sink": {
											"name": "project_id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['basis1']"
										},
										"sink": {
											"name": "basis1",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "[['basis2']"
										},
										"sink": {
											"name": "basis2",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "[['basis3']"
										},
										"sink": {
											"name": "basis3",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "[['basis4']"
										},
										"sink": {
											"name": "basis4",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "[['basis5']"
										},
										"sink": {
											"name": "basis5",
											"type": "Decimal"
										}
									}
								],
								"collectionReference": "$['Records']",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "RestResourceBouwsoftSalesInvoices",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlSalesInvoices",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-04-14T08:41:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlParameters')]",
				"[concat(variables('factoryId'), '/datasets/RestResourceBouwsoftSalesInvoices')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlSalesInvoices')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BouwsoftPipelineWorkOrders')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy WorkOrders",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup Parameters",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:10:00",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"AbsoluteUrl.{offset}": "RANGE:0:9:1"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['OrderNr']"
										},
										"sink": {
											"name": "ordernr",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ProjectNr']"
										},
										"sink": {
											"name": "projectnr",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['WorkDate']"
										},
										"sink": {
											"name": "workdate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['CustomerName']"
										},
										"sink": {
											"name": "customertname",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['CustomerStreet']"
										},
										"sink": {
											"name": "customerstreet",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['CustomerZIP']"
										},
										"sink": {
											"name": "customerzip",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['CustomerCity']"
										},
										"sink": {
											"name": "customercity",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['WorkDescription']"
										},
										"sink": {
											"name": "workdescription",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['CreationDate']"
										},
										"sink": {
											"name": "creationdate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['status']"
										},
										"sink": {
											"name": "status",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['EmployeeNr']"
										},
										"sink": {
											"name": "employee_id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['WorkDuration']"
										},
										"sink": {
											"name": "workduration",
											"type": "Int64"
										}
									}
								],
								"collectionReference": "$['response']",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "RestResourceOutsmartWorkOrders",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlWorkOrders",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Truncate WorkOrders",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Truncate_WorkOrders]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup Parameters",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate WorkOrders",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlParameters",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-04-13T12:07:55Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestResourceOutsmartWorkOrders')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlWorkOrders')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlParameters')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/General')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "BouwsoftPipelineParameters",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "BouwsoftPipelineParameters",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "BouwsoftPipelineAddresses",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "BouwsoftPipelineParameters",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "BouwsoftPipelineAddresses",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "BouwsoftPipelineProjects",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "BouwsoftPipelineAddresses",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "BouwsoftPipelineProjects",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "BouwsoftPipelineCompanyDetails",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "BouwsoftPipelineProjects",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "BouwsoftPipelineCompanyDetails",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "BouwsoftPipelinePurchaseOrders",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "BouwsoftPipelineCompanyDetails",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "BouwsoftPipelinePurchaseOrders",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "BouwsoftPipelinePurchaseInvoices",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "BouwsoftPipelinePurchaseOrders",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "BouwsoftPipelinePurchaseInvoices",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "BouwsoftPipelineSalesInvoices",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "BouwsoftPipelinePurchaseInvoices",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "BouwsoftPipelineSalesInvoices",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "BouwsoftPipelineActualCostItems",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "BouwsoftPipelineSalesInvoices",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "BouwsoftPipelineActualCostItems",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "BouwsoftPipelinePurchaseInvoiceProjects",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "BouwsoftPipelineActualCostItems",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "BouwsoftPipelinePurchaseInvoiceProjects",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "BouwsoftPipelineWorkOrders",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "BouwsoftPipelineEmployees",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "BouwsoftPipelineWorkOrders",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "BouwsoftPipelineEmployees",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "BouwsoftPipelinePurchaseInvoiceProjects",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "BouwsoftPipelineEmployees",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-04-14T08:41:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/BouwsoftPipelineParameters')]",
				"[concat(variables('factoryId'), '/pipelines/BouwsoftPipelineAddresses')]",
				"[concat(variables('factoryId'), '/pipelines/BouwsoftPipelineProjects')]",
				"[concat(variables('factoryId'), '/pipelines/BouwsoftPipelineCompanyDetails')]",
				"[concat(variables('factoryId'), '/pipelines/BouwsoftPipelinePurchaseOrders')]",
				"[concat(variables('factoryId'), '/pipelines/BouwsoftPipelinePurchaseInvoices')]",
				"[concat(variables('factoryId'), '/pipelines/BouwsoftPipelineSalesInvoices')]",
				"[concat(variables('factoryId'), '/pipelines/BouwsoftPipelineActualCostItems')]",
				"[concat(variables('factoryId'), '/pipelines/BouwsoftPipelinePurchaseInvoiceProjects')]",
				"[concat(variables('factoryId'), '/pipelines/BouwsoftPipelineWorkOrders')]",
				"[concat(variables('factoryId'), '/pipelines/BouwsoftPipelineEmployees')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlActualCostItems')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "company_id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "nr_supplier",
						"type": "nvarchar"
					},
					{
						"name": "address_id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "basis1",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "basis2",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "basis3",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "basis4",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "basis5",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ActualCostItems"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlAddresses')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "clientnr",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "suppliernr",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "name",
						"type": "nvarchar"
					},
					{
						"name": "address",
						"type": "nvarchar"
					},
					{
						"name": "city",
						"type": "nvarchar"
					},
					{
						"name": "zipcode",
						"type": "nvarchar"
					},
					{
						"name": "countrycode",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Addresses"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlCompanyDetails')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "pnr",
						"type": "int",
						"precision": 10
					},
					{
						"name": "name",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "CompanyDetails"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlEmployees')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "firstname",
						"type": "nvarchar"
					},
					{
						"name": "lastname",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Employees"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlParameters')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AccessToken",
						"type": "nvarchar"
					},
					{
						"name": "ServerName",
						"type": "nvarchar"
					},
					{
						"name": "ValidUntil",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Parameters"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlProjects')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "pnr",
						"type": "int",
						"precision": 10
					},
					{
						"name": "name",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Projects"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlPurchaseInvoiceProjects')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "company_id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "nr_supplier",
						"type": "nvarchar"
					},
					{
						"name": "address_id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "basis1",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "basis2",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "basis3",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "basis4",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "basis5",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "PurchaseInvoiceProjects"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlPurchaseInvoices')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "company_id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "nr_supplier",
						"type": "nvarchar"
					},
					{
						"name": "address_id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "basis1",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "basis2",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "basis3",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "basis4",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "basis5",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "PurchaseInvoices"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlPurchaseOrders')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "PurchaseOrders"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlSalesInvoices')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "company_id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "nr_supplier",
						"type": "nvarchar"
					},
					{
						"name": "address_id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "basis1",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "basis2",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "basis3",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "basis4",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "basis5",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "SalesInvoices"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlWorkOrders')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "ordernr",
						"type": "nvarchar"
					},
					{
						"name": "projectnr",
						"type": "nvarchar"
					},
					{
						"name": "workdate",
						"type": "nvarchar"
					},
					{
						"name": "customertname",
						"type": "nvarchar"
					},
					{
						"name": "customercity",
						"type": "nvarchar"
					},
					{
						"name": "customerzip",
						"type": "nvarchar"
					},
					{
						"name": "customerstreet",
						"type": "nvarchar"
					},
					{
						"name": "creationdate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "status",
						"type": "nvarchar"
					},
					{
						"name": "employee_id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "workdescription",
						"type": "nvarchar"
					},
					{
						"name": "comment",
						"type": "nvarchar"
					},
					{
						"name": "workduration",
						"type": "bigint",
						"precision": 19
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "WorkOrders"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResourceAccessToken')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestServiceBouwsoftAccessToken",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestServiceBouwsoftAccessToken')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResourceBouwsoftActualCostItems')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestServiceBouwsoft",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": "ActualCostItems?columns=id|project_id|actualcost_id|description&limit=500&offset={offset}&sort=id"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestServiceBouwsoft')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResourceBouwsoftAddresses')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestServiceBouwsoft",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": "Addresses?&limit=500&offset={offset}&sort=id"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestServiceBouwsoft')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResourceBouwsoftCompanyDetails')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestServiceBouwsoft",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": "CompanyDetails?&columns=id|name"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestServiceBouwsoft')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResourceBouwsoftProjects')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestServiceBouwsoft",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": "projects?&columns=id|pnr|name|company_id&limit=500&offset={offset}&sort=id"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestServiceBouwsoft')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResourceBouwsoftPurchaseInvoiceProjects')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestServiceBouwsoft",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": "PurchaseInvoiceProjects?columns=id|purchaseinvoice_id|purchaseinvoice_nr|address_supplier_id|project_id|actualcostitem_id|amount&limit=500&offset={offset}&sort=id"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestServiceBouwsoft')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResourceBouwsoftPurchaseInvoices')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestServiceBouwsoft",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": "PurchaseInvoices?filter=date gt '1900-01-01'&columns=id|company_id|date|nr_supplier|address_id|basis1|basis2|basis3|basis4|basis5&limit=500&offset={offset}&sort=id"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestServiceBouwsoft')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResourceBouwsoftPurchaseOrders')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestServiceBouwsoft",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": "PurchaseOrders?columns=id|nr|company_id|project_id|address_id|ledger|billed|approved|delivered|date|basis1|basis2|basis3|basis4|basis5&limit=500&offset={offset}&sort=id"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestServiceBouwsoft')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResourceBouwsoftSalesInvoices')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestServiceBouwsoft",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": "SalesInvoices?columns=id|company_id|type_id|nr|date|address_id|project_id|basis1|basis2|basis3|basis4|basis5&limit=500&offset={offset}&sort=id"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestServiceBouwsoft')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResourceOutsmartEmployees')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestServiceOutsmart",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": "employees?token=148af45b01225b21e3576967dd0a42b3&software_token=ac0447ccbba1c0ae31f10d59084a03e3fe3c76a4"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestServiceOutsmart')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResourceOutsmartWorkOrders')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestServiceOutsmart",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"batch": {
						"type": "string",
						"defaultValue": "0"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat('GetWorkorders?key[]=OrderNr&value[]=WB', string(dataset().batch),'%&operator[]=li&key[]=EmployeeNr&value[]=0&operator[]=gt&token=148af45b01225b21e3576967dd0a42b3&software_token=ac0447ccbba1c0ae31f10d59084a03e3fe3c76a4')",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestServiceOutsmart')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestServiceBouwsoft')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestServiceBouwsoft_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestServiceBouwsoftAccessToken')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestServiceBouwsoftAccessToken_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestServiceOutsmart')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestServiceOutsmart_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/refreshBouwsoftDataWarehouse')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "General",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-04-20T09:54:00Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								2
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/General')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0,
							"cleanup": true
						},
						"pipelineExternalComputeScaleProperties": {
							"timeToLive": 60
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BouwsoftPipelineWorkOrdersTest')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Truncate WorkOrders",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Truncate_WorkOrders]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Truncate WorkOrders",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(0,2)",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy WorkOrders",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:10:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "upsert",
											"upsertSettings": {
												"useTempDB": true,
												"keys": [
													"id"
												]
											},
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['id']"
													},
													"sink": {
														"name": "id",
														"type": "Int64"
													}
												},
												{
													"source": {
														"path": "[['OrderNr']"
													},
													"sink": {
														"name": "ordernr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ProjectNr']"
													},
													"sink": {
														"name": "projectnr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['WorkDate']"
													},
													"sink": {
														"name": "workdate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CustomerName']"
													},
													"sink": {
														"name": "customertname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CustomerStreet']"
													},
													"sink": {
														"name": "customerstreet",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CustomerZIP']"
													},
													"sink": {
														"name": "customerzip",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CustomerCity']"
													},
													"sink": {
														"name": "customercity",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['WorkDescription']"
													},
													"sink": {
														"name": "workdescription",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CreationDate']"
													},
													"sink": {
														"name": "creationdate",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "[['status']"
													},
													"sink": {
														"name": "status",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['EmployeeNr']"
													},
													"sink": {
														"name": "employee_id",
														"type": "Int64"
													}
												},
												{
													"source": {
														"path": "[['WorkDuration']"
													},
													"sink": {
														"name": "workduration",
														"type": "Int64"
													}
												}
											],
											"collectionReference": "$['response']",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "RestResourceOutsmartWorkOrders",
											"type": "DatasetReference",
											"parameters": {
												"batch": {
													"value": "@substring(concat('0',item()),0,2)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureSqlWorkOrders",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"counter": {
						"type": "Array"
					}
				},
				"annotations": [],
				"lastPublishTime": "2022-04-13T12:07:55Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]",
				"[concat(variables('factoryId'), '/datasets/RestResourceOutsmartWorkOrders')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlWorkOrders')]"
			]
		}
	]
}